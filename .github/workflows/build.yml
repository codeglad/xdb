name: Build
on:
  push:
    branches:
      - master
      - develop
      - release/*
  pull_request:
jobs:

  test:
    name: Build for OS ${{ matrix.goos }} with ARCH ${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: [ 1.15 ]
        goos: [darwin, linux, windows]
        goarch: [386, amd64]
    steps:
    - name: Set up Go ${{ matrix.go_version }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go_version }}
      id: go
    - uses: actions/checkout@v1
    - name: Build
      if: ${{ matrix.goos }} != 'darwin' && ${{ matrix.goarch }} != '386'
      run: |
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ./bin/xdb -ldflags="-s -w -X 'main.Version=${GITHUB_REF}'" ./cmd/xdb
    - uses: actions-github/upx@master
      if: ${{ matrix.goos }} != 'darwin' && ${{ matrix.goarch }} != '386'
      with:
        dir: ./bin
        upx_args: '--ultra-brute'
    - uses: actions/upload-artifact@master
      if: ${{ matrix.goos }} != 'darwin' && ${{ matrix.goarch }} != '386'
      with:
        name: binaries
        path: ./bin
